<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qr.admin.mapper.AdminMapper">

    <resultMap id="AdminEntityMap" type="com.qr.common.entity.AdminEntity">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="locked" jdbcType="CHAR" property="locked"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="createTime" jdbcType="VARCHAR" property="createTime"/>
        <result column="modifyTime" jdbcType="VARCHAR" property="modifyTime"/>
        <result column="canDelete" jdbcType="INTEGER" property="canDelete"/>
    </resultMap>
    <sql id="admin_query_where_cluse">
        <where>
            <if test="id!=null and id!=''">
                id=#{id}
            </if>
            <if test="name!=null and name!=''">
                and name like CONCAT('%',#{name},'%')
            </if>
            <if test="username!=null and username!=''">
                and username like CONCAT('%',#{username},'%')
            </if>
            <if test="password!=null and password!=''">
                and password=#{password}
            </if>
            <if test="mobile!=null and mobile!=''">
                and mobile like CONCAT('%',#{mobile},'%')
            </if>
            <if test="email!=null and email!=''">
                and email like CONCAT('%',#{email},'%')
            </if>
        </where>
    </sql>
    <sql id="admin_update_set_cluse">
        <set>
            <if test="name!=null and name!=''">
                name=#{name},
            </if>
            <if test="username!=null and username!=''">
                username=#{username},
            </if>
            <if test="password!=null and password!=''">
                password=#{password},
            </if>
            <if test="salt!=null and salt!=''">
                salt=#{salt},
            </if>
            <if test="locked!=null and locked!=''">
                locked=#{locked},
            </if>
            <if test="mobile!=null and mobile!=''">
                mobile=#{mobile},
            </if>
            <if test="email!=null and email!=''">
                email=#{email},
            </if>
            <if test="status!=null and status!=''">
                status=#{status},
            </if>
        </set>
    </sql>
    <sql id="admin_delete_where_cluse">
        <where>
            <foreach collection="list" item="admin" separator=" and ">
                <if test="admin.id!=null and admin.id!=''">
                    admin.id=#{admin.id}
                </if>
                <if test="admin.name!=null and admin.name!=''">
                    admin.name=#{admin.name}
                </if>
                <if test="admin.username!=null and admin.username!=''">
                    admin.username=#{admin.username}
                </if>
                <if test="admin.password!=null and admin.password!=''">
                    admin.password=#{admin.password}
                </if>
                <if test="admin.mobile!=null and admin.mobile!=''">
                    admin.mobile=#{admin.mobile}
                </if>
                <if test="admin.email!=null and admin.email!=''">
                    admin.email=#{admin.email}
                </if>
            </foreach>
        </where>
    </sql>
    <!-->获取所有管理员,无关id，带分页<!-->
    <select id="getAllAdmin" resultMap="AdminEntityMap">
        SELECT user.*,admin_user.canDelete FROM USER
        INNER JOIN admin_user ON(user.id=admin_user.userId)
        INNER JOIN user_role ON(user_role.userId=user.id)
        INNER JOIN role ON(role.id=user_role.roleId)
    </select>
    <select id="queryAdmin" resultMap="AdminEntityMap" parameterType="com.qr.common.entity.AdminEntity">
        SELECT user.*,admin_user.canDelete FROM user
        inner join admin_user on(user.id=admin_user.userId)
        <include refid="admin_query_where_cluse"/>
    </select>
    <!-->新增角色，注意看返回值应该如何填写<!-->
    <insert id="addAdmin" parameterType="com.qr.common.entity.AdminEntity" useGeneratedKeys="true" keyProperty="id">
        insert into user(name,username,password,salt,locked,status,mobile,email)
        values(#{name},#{username},#{password},#{salt},#{locked},#{status},#{mobile},#{email})
        <selectKey keyColumn="id" resultType="int" keyProperty="id" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>
    <insert id="addAdminUser" parameterType="com.qr.common.entity.AdminEntity">
        insert into admin_user(userId)
        values(#{id})
    </insert>
    <insert id="addUserRole" parameterType="com.qr.common.entity.AdminEntity">
        INSERT INTO user_role(userId,roleId) VALUES(#{id},#{roleId})
    </insert>
    <update id="editAdmin">
        update user
        <include refid="admin_update_set_cluse"/>
        where id=#{id}
    </update>
    <!--update user_role表，如果修改角色的话 -->
    <update id="editUserRole">
        update user_role
        set roleId=#{roleId}
        where userId=#{id}
    </update>
    <delete id="delAdmin" parameterType="java.util.List">
        delete from user
        where id in
        <foreach collection="list" item="admin" open="(" close=")" index="index" separator=",">
            #{admin.id}
        </foreach>
    </delete>
    <select id="getAdminByUsername" resultMap="AdminEntityMap" parameterType="com.qr.common.entity.AdminEntity">
        select * from user where username=#{username}
    </select>

</mapper>